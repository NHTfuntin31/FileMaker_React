"""
Django settings for FileMaker project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-r$h8wjfjtt!)9in&i_an%-$j)_e_jyn($-+#a7m1jm0^c$9i$6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*',]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 2023/07/19
    #'django.contrib.sites',  # 確認
    'allauth',  # 確認
    'allauth.account',  # 確認
    'rest_auth', # 追加
    'rest_framework.authtoken', # 追加
    'rest_auth.registration', # 追加
    'FileMaker',
    
    #cors エラー
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    
    #cors エラー
    'corsheaders.middleware.CorsMiddleware',
]

# 2023/09/13
AUTHENTICATION_BACKENDS = [ 
  'django.contrib.auth.backends.ModelBackend',     
  'allauth.account.auth_backends.AuthenticationBackend',
] 

SITE_ID = 1

ROOT_URLCONF = 'FileMaker.urls'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
}


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'FileMaker.wsgi.application'

SESSION_COOKIE_AGE = 3600 * 12

LOG_INFO = {'LogBatch': {'LogFile': 'D:\\Log\\Django\\Batch.log',
                         'LogName': 'DjangoBatch',
                         'LogLevel': 10,
                        },
            'LogWeb': {'LogFile': 'D:\\Log\\Django\\Web.log',
                         'LogName': 'DjangoWeb',
                         'LogLevel': 10,
                        },
}

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'fmk',
        'USER': 'postgres',
        'PASSWORD': 'dxgo1234',
        'HOST': 'localhost',
        'PORT': '5432',
        'ATOMIC_REQUESTS': False,  # 追加
        'TIME_ZONE': 'Japan',
    },
}

# FileMakerでは、基本、以下の設定から共通クラス経由でDB操作を行う
# →Django経由だとトランザクションの扱いが不明瞭な為
# Postgres :AutoCommit無効、トランザクションネスト時はコネクションを複数使う
# MongoDB  :即時反映
# Redis    :即時反映
EXT_DATABASE = {
    'MongoDB': {
        'Host': 'localhost',
        'PortNo': 27017, 
        'DBName': 'FileMaker', 
        'Auth': False, 
        'user': None, 
        'Pass': None
    },
    'Redis_Auth': {
        'Host': 'localhost',
        'PortNo': 6379, 
        'DB': 1, 
        'Auth': False, 
        'user': None, 
        'Pass': None
    },
    'Redis_WebStore': {
        'Host': 'localhost',
        'PortNo': 6379, 
        'DB': 2, 
        'Auth': False, 
        'user': None, 
        'Pass': None
    },
    'PostgreSQL':{
    	"User": "postgres", 
    	"Pass":"pgadmin", 
    	"Host": "localhost", 
    	"PortNo":5432, 
    	"DBName": "FileMakaer"
    },
    'MySQL':{
        'User':'root',
        'PassWord':'',
        'Host':'localhost',
        'Port':3306,
        'DataBase':'e-doctor'
    }
}

# FileMaker 内部FireWall設定
FIRE_WALL = {
    'Masks':[
        '192.168.1.0/24',
        '192.168.2.0/24',
        '192.168.3.0/24',
        '192.168.5.0/24'
    ]
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ローカルコンピューターからのアクセス許可
LOCAL_ACCESS = True


CORS_ALLOWED_ORIGINS = [
    "http://osk-195",
    "http://localhost:5173"
]

CORS_ALLOW_CREDENTIALS = True
